name: CI/CD
on:
  push:
    branches:
      - testCICD_no_failed
  pull_request:


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      # check-ot our repository
      - uses: actions/checkout@v2
        with:
            fetch-depth: 0

      # install app dependencies
      - name: Install dependencies
        run: |
          npm install
          npm ci

      # Testing our apps
      - name: Testing
        run: npm test

      # Install doctl
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Build container image
      - name: Build container image
        run: docker build -t registry.digitalocean.com/nycu-cn-team-8/apc-simulator:$(echo $GITHUB_SHA | head -c7) .

      # Log in to DigitalOcean
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      # Push image to DigitalOcean Container Registry
      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/nycu-cn-team-8/apc-simulator:$(echo $GITHUB_SHA | head -c7)
#
#  deploy:
#    needs: build
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout files
#        uses: actions/checkout@v2
#
#      - name: Get tag name
#        uses: olegtarasov/get-tag@v2
#
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#
#      - name: Provision Droplet and deploy container
#        run: doctl compute droplet create "$GIT_TAG_NAME" --image docker-18-04 --size s-1vcpu-1gb --region nyc1 --user-data-file deploy.sh --wait